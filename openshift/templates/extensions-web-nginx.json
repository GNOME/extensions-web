{
  "kind": "Template",
  "apiVersion": "v1",
  "metadata": {
    "name": "extensions-web",
    "annotations": {
      "openshift.io/display-name": "GNOME Shell extensions website",
      "description": "GNOME Shell extensions website. For more information about using this template see https://gitlab.gnome.org/Infrastructure/extensions-web.",
      "tags": "gnome,python,nginx,uwsgi,extensions-web",
      "iconClass": "icon-django",
      "openshift.io/long-description": "This template defines resources needed to run GNOME Shell extensions repository website, including a build configuration and application deployment configuration.  It does not include a database.",
      "openshift.io/provider-display-name": "GNOME",
      "openshift.io/documentation-url": "https://gitlab.gnome.org/Infrastructure/extensions-web",
      "openshift.io/support-url": "https://gitlab.gnome.org/Infrastructure/extensions-web/issues",
      "template.openshift.io/bindable": "false"
    }
  },
  "message": "The following service(s) have been created in your project: ${NAME}.\n\nFor more information about using this template, see https://gitlab.gnome.org/Infrastructure/extensions-web.",
  "labels": {
      "template": "extensions-web",
      "app": "extensions-web"
  },
  "objects": [
    {
      "kind": "ConfigMap",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}"
      },
      "data": {
        "media-root": "/extensions-web/www/uploaded-files",
        "static-root": "/extensions-web/www/static-files"
      }
    },
    {
      "kind": "Secret",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}"
      },
      "stringData": {
        "database-url": "${EGO_DATABASE_URL}",
        "secret-key": "${EGO_SECRET_KEY}"
      }
    },
    {
      "kind": "Secret",
      "apiVersion": "v1",
      "metadata": {
        "name": "gnome-gitlab"
      },
      "stringData": {
        "WebHookSecretKey": "${WEBHOOK_SECRET_KEY}"
      }
    },
    {
      "kind": "Service",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "annotations": {
          "description": "Exposes and load balances the application pods"
        }
      },
      "spec": {
        "ports": [
          {
            "name": "${NAME}",
            "port": 80,
            "targetPort": 8080
          }
        ],
        "selector": {
          "name": "extensions-web"
        }
      }
    },
    {
      "kind": "Route",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}"
      },
      "spec": {
        "host": "${APPLICATION_DOMAIN}",
        "to": {
          "kind": "Service",
          "name": "${NAME}"
        },
        "tls": {
          "insecureEdgeTerminationPolicy": "Redirect",
          "termination": "edge"
        }
      }
    },
    {
      "kind": "ImageStream",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "annotations": {
          "description": "Keeps track of changes in the application image"
        }
      }
    },
    {
      "kind": "BuildConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "annotations": {
          "description": "Defines how to build the application",
          "template.alpha.openshift.io/wait-for-ready": "true"
        }
      },
      "spec": {
        "source": {
          "type": "Git",
          "git": {
            "uri": "${SOURCE_REPOSITORY_URL}",
            "ref": "${SOURCE_REPOSITORY_REF}"
          }
        },
        "postCommit": {
            "script": "bash -c 'python manage.py collectstatic --noinput && python manage.py test'"
        },
        "strategy": {
          "type": "Docker",
          "dockerStrategy": {
            "env": [
                {
                    "name": "EGO_SECRET_KEY",
                    "valueFrom": {
                        "secretKeyRef": {
                            "name": "extensions-web",
                            "key": "secret-key"
                        }
                    }
                },
                {
                    "name": "EGO_MEDIA_ROOT",
                    "valueFrom": {
                        "configMapKeyRef": {
                            "name": "extensions-web",
                            "key": "media-root"
                        }
                    }
                },
                {
                    "name": "EGO_STATIC_ROOT",
                    "valueFrom": {
                        "configMapKeyRef": {
                            "name": "extensions-web",
                            "key": "static-root"
                        }
                    }
                }
            ],
            "dockerfilePath": "openshift/docker/Dockerfile"
          }
        },
        "output": {
          "to": {
            "kind": "ImageStreamTag",
            "name": "${NAME}:latest"
          }
        },
        "triggers": [
          {
            "type": "ImageChange"
          },
          {
            "type": "ConfigChange"
          },
          {
            "type": "GitLab",
            "gitlab": {
              "secretReference": {
                "name": "gnome-gitlab"
              }
            }
          }
        ]
      }
    },
    {
      "kind": "BuildConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "frontend",
        "annotations": {
          "description": "Defines how to build the frontend",
          "template.alpha.openshift.io/wait-for-ready": "true"
        }
      },
      "spec": {
        "source": {
          "type": "Git",
          "git": {
            "uri": "${SOURCE_REPOSITORY_URL}",
            "ref": "${SOURCE_REPOSITORY_REF}"
          },
          "contextDir": "openshift/docker/nginx"
        },
        "strategy": {
          "type": "Docker",
          "dockerStrategy": {
            "env": [
              {
                "name": "EGO_NODE_ADDRESS",
                "value": "${EGO_NODE_ADDRESS}"
              }
            ]
          }
        },
        "output": {
          "to": {
            "kind": "ImageStreamTag",
            "name": "frontend:latest"
          }
        },
        "triggers": [
          {
            "type": "ImageChange"
          },
          {
            "type": "ConfigChange"
          },
          {
            "type": "GitLab",
            "gitlab": {
              "secretReference": {
                "name": "gnome-gitlab"
              }
            }
          }
        ]
      }
    },
    {
      "kind": "PersistentVolumeClaim",
      "apiVersion": "v1",
      "metadata": {
        "name": "extensions-claim"
      },
      "spec": {
        "accessModes": [
          "ReadWriteOnce"
        ],
        "resources": {
          "requests": {
            "storage": "3096Mi"
          }
        }
      }
    },
    {
      "kind": "DeploymentConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "annotations": {
          "description": "Defines how to deploy the application server",
          "template.alpha.openshift.io/wait-for-ready": "true"
        }
      },
      "spec": {
        "strategy": {
          "type": "Recreate"
        },
        "triggers": [
          {
            "type": "ImageChange",
            "imageChangeParams": {
              "automatic": true,
              "containerNames": [
                "${NAME}"
              ],
              "from": {
                "kind": "ImageStreamTag",
                "name": "${NAME}:latest"
              }
            }
          },
          {
            "type": "ConfigChange"
          }
        ],
        "replicas": 1,
        "selector": {
          "name": "${NAME}"
        },
        "template": {
          "metadata": {
            "name": "${NAME}",
            "labels": {
              "name": "${NAME}"
            }
          },
          "spec": {
            "volumes": [
              {
                "name": "data-volume",
                "persistentVolumeClaim": {
                  "claimName": "extensions-claim"
                }
              }
            ],
            "containers": [
              {
                "name": "${NAME}",
                "image": " ",
                "command": [
                    "bash"
                ],
                "args": [
                    "-c",
                    "python manage.py collectstatic --noinput && python manage.py migrate && uwsgi --enable-threads --ini /extensions-web/wsgi.ini"
                ],
                "ports": [
                  {
                    "containerPort": 8001
                  }
                ],
                "readinessProbe": {
                  "timeoutSeconds": 3,
                  "initialDelaySeconds": 3,
                  "periodSeconds": 60,
                  "tcpSocket": {
                    "port": 8001
                  }
                },
                "livenessProbe": {
                  "timeoutSeconds": 3,
                  "initialDelaySeconds": 30,
                  "periodSeconds": 60,
                  "tcpSocket": {
                    "port": 8001
                  }
                },
                "env": [
                  {
                    "name": "EGO_DATABASE_URL",
                    "valueFrom": {
                      "secretKeyRef" : {
                        "name" : "${NAME}",
                        "key" : "database-url"
                      }
                    }
                  },
                  {
                    "name": "EGO_SECRET_KEY",
                    "valueFrom": {
                      "secretKeyRef" : {
                        "name" : "${NAME}",
                        "key" : "secret-key"
                      }
                    }
                  },
                  {
                    "name": "EGO_ALLOWED_HOST",
                    "value": "${APPLICATION_DOMAIN}"
                  },
                  {
                    "name": "EGO_XAPIAN_DB",
                    "value": "${EGO_XAPIAN_DB}"
                  }
                ],
                "volumeMounts": [
                  {
                    "name": "data-volume",
                    "mountPath": "/extensions-web/www",
                    "subPath": "www"
                  },
                  {
                    "mountPath": "/extensions-web/data",
                    "name": "data-volume",
                    "subPath": "data"
                  }
                ],
                "resources": {
                  "limits": {
                    "memory": "${MEMORY_LIMIT}"
                  }
                }
              },
              {
                "name": "frontend",
                "image": " ",
                "ports": [
                  {
                    "containerPort": 8080
                  }
                ],
                "readinessProbe": {
                  "timeoutSeconds": 3,
                  "initialDelaySeconds": 10,
                  "periodSeconds": 60,
                  "httpGet": {
                    "path": "/health",
                    "port": 8080
                  }
                },
                "livenessProbe": {
                  "timeoutSeconds": 3,
                  "initialDelaySeconds": 45,
                  "periodSeconds": 60,
                  "httpGet": {
                    "path": "/health",
                    "port": 8080
                  }
                },
                "volumeMounts": [
                  {
                    "name": "data-volume",
                    "mountPath": "/extensions-web/www",
                    "subPath": "www"
                  }
                ],
                "resources": {
                  "limits": {
                    "memory": "512Mi"
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "kind": "CronJob",
      "apiVersion": "batch/v1beta1",
      "metadata": {
        "name": "job-update-popularity"
      },
      "spec": {
        "schedule": "0 0 * * *",
        "jobTemplate": {
          "spec": {
            "template": {
              "spec": {
                "containers": [
                  {
                    "name": "update-popularity",
                    "image": "${NAME}:latest",
                    "command": ["/extensions-web/app/bin/sweettooth-cron-update"]
                  }
                ],
                "restartPolicy": "Never"
              }
            }
          }
        }
      }
    },
    {
      "kind": "CronJob",
      "apiVersion": "batch/v1beta1",
      "metadata": {
        "name": "job-update-software"
      },
      "spec": {
        "schedule": "10 0 * * *",
        "jobTemplate": {
          "spec": {
            "template": {
              "spec": {
                "containers": [
                  {
                    "name": "update-software",
                    "image": "${NAME}:latest",
                    "command": ["/extensions-web/app/bin/sweettooth-cron-software"]
                  }
                ],
                "restartPolicy": "Never"
              }
            }
          }
        }
      }
    }
  ],
  "parameters": [
    {
      "name": "NAME",
      "displayName": "Name",
      "description": "The name assigned to all of the frontend objects defined in this template.",
      "required": true,
      "value": "extensions-web"
    },
    {
      "name": "NAMESPACE",
      "displayName": "Namespace",
      "description": "The OpenShift Namespace where the ImageStream resides.",
      "required": true,
      "value": "openshift"
    },
    {
      "name": "MEMORY_LIMIT",
      "displayName": "Memory Limit",
      "description": "Maximum amount of memory the container can use.",
      "required": true,
      "value": "2048Mi"
    },
    {
      "name": "SOURCE_REPOSITORY_URL",
      "displayName": "Git Repository URL",
      "description": "The URL of the repository with your application source code.",
      "required": true,
      "value": "https://gitlab.gnome.org/Infrastructure/extensions-web.git"
    },
    {
      "name": "SOURCE_REPOSITORY_REF",
      "displayName": "Git Reference",
      "description": "Set this to a branch name, tag or other ref of your repository if you are not using the default branch."
    },
    {
      "name": "APPLICATION_DOMAIN",
      "displayName": "Application Hostname",
      "description": "The exposed hostname that will route to the extensions-web service, if left blank a value will be defaulted.",
      "value": ""
    },
    {
      "name": "EGO_DATABASE_URL",
      "displayName": "Database URL",
      "description": "Database URL in format suitable for dj-database-url",
      "value": ""
    },
    {
      "name": "EGO_NODE_ADDRESS",
      "displayName": "Address of extensions-web container",
      "description": "Either DNS name or IP address. Should be localhost for Openshift.",
      "value": "localhost"
    },
    {
      "name": "EGO_SECRET_KEY",
      "displayName": "Django secret key",
      "description": "Django secret key.",
      "value": ""
    },
    {
      "name": "EGO_XAPIAN_DB",
      "displayName": "Xapian database path",
      "description": "Path to Xapian database.",
      "value": ""
    },
    {
      "name": "WEBHOOK_SECRET_KEY",
      "displayName": "WebHook secret key",
      "description": "Secret key for GNOME Gitlab.",
      "value": ""
    }
  ]
}
